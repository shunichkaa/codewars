#Write a function that will solve a 9x9 Sudoku puzzle. 
#The function will take one argument consisting of the 2D puzzle array, 
#with the value 0 representing an unknown square.









def is_valid_move(puzzle, row, col, num):
    # Check if the number is already in the row
    if num in puzzle[row]:
        return False
    
    # Check if the number is already in the column
    if num in [puzzle[i][col] for i in range(9)]:
        return False
    
    # Check if the number is already in the 3x3 grid
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    for i in range(start_row, start_row + 3):
        for j in range(start_col, start_col + 3):
            if puzzle[i][j] == num:
                return False
    
    return True

def solve_sudoku(puzzle):
    for i in range(9):
        for j in range(9):
            if puzzle[i][j] == 0:
                for num in range(1, 10):
                    if is_valid_move(puzzle, i, j, num):
                        puzzle[i][j] = num
                        if solve_sudoku(puzzle):
                            return True
                        puzzle[i][j] = 0  # Backtrack
                return False
    return True

def sudoku(puzzle):
    if solve_sudoku(puzzle):
        return puzzle
    else:
        return None

# Test the function with the provided puzzle
puzzle = [
    [5,3,0,0,7,0,0,0,0],
    [6,0,0,1,9,5,0,0,0],
    [0,9,8,0,0,0,0,6,0],
    [8,0,0,0,6,0,0,0,3],
    [4,0,0,8,0,3,0,0,1],
    [7,0,0,0,2,0,0,0,6],
    [0,6,0,0,0,0,2,8,0],
    [0,0,0,4,1,9,0,0,5],
    [0,0,0,0,8,0,0,7,9]
]
print(sudoku(puzzle))
