def knight(p1, p2):
    moves = [(-2, -1), (-2, 1), (-1, -2), (-1, 2), (1, -2), (1, 2), (2, -1), (2, 1)]
    col1, row1 = ord(p1[0]) - ord('a'), int(p1[1]) - 1
    col2, row2 = ord(p2[0]) - ord('a'), int(p2[1]) - 1
    queue = [(row1, col1, 0)]
    visited = set([(row1, col1)])
    while queue:
        row, col, dist = queue.pop(0)
        if row == row2 and col == col2:
            return dist
        for dr, dc in moves:
            r, c = row + dr, col + dc
            if 0 <= r < 8 and 0 <= c < 8 and (r, c) not in visited:
                queue.append((r, c, dist + 1))
                visited.add((r, c))
    return None
