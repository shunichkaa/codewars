#The "prime ant" is an obstinate animal that navigates the integers and divides them until there are only primes left!
#Initially, we have an infinite array A containing all the integers >= 2 : [2, 3, 4, 5, 6, ... ]
#Let p be the position of the ant on the array. Initially, p = 0 (the array is 0-indexed)









def prime_ant(n):
    A = list(range(2, n * 2))
    p = 0
    for _ in range(n):
        if is_prime(A[p]):
            p += 1
        else:
            q = smallest_divisor(A[p])
            A[p] //= q
            A[p - 1] += q
            p -= 1
    return A[:p + 1]

def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True

def smallest_divisor(num):
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return i
    return num
